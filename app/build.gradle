apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs.kotlin"

apply plugin: 'com.apollographql.apollo'

apply plugin: "kotlin-allopen"

apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "my.projects.seasonalanimetracker"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = ["cleartextEnabled":true]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    apollo {
        generateKotlinModels.set(true)
    }

    allOpen {
        annotation("my.projects.seasonalanimetracker.app.testing.Mockable")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'

    // AppCompat
    implementation 'androidx.appcompat:appcompat:1.2.0'

    // Materials
    implementation 'com.google.android.material:material:1.3.0-alpha02'

    // ViewPager2
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'

    // Testing
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'com.google.truth:truth:0.42'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation "android.arch.core:core-testing:1.1.1"
    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'

    // Fragment testing
    def fragment_version = "1.2.5"
    debugImplementation ("androidx.fragment:fragment-testing:$fragment_version") {
        exclude group: "androidx.test", module: "core"
    }

    // Mockito
    def mockito_version = "2.28.2"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    // Mockito-kotlin
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    // ConstraintLayout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    // Lifecycle
    def lifecycle_version = "2.2.0"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Java8 Lifecycle support
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"


    // Retrofit
    def retrofit_version = "2.5.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"

    // Rx
    //RxJava
    def rxjava_version = "2.2.9"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    // RxAndroid
    def rxandroid_version = "2.1.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    // RxKotlin
    def rxkotlin_version = "2.3.0"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    // Hilt ViewModel support
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'
    // WorkManager
    implementation 'androidx.hilt:hilt-work:1.0.0-alpha02'


    // Glide
    def glide_version = "4.10.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:4.6.0"
    // MockWebServer
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.8.1"

    // Room
    def room_version = "2.3.0-alpha02"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // Apollo GraphQL
    implementation "com.apollographql.apollo:apollo-runtime:1.4.5"
    implementation "com.apollographql.apollo:apollo-android-support:1.4.5"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Paging
    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // RxJava support
    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version"

    // WorkManager
    def work_version = "2.4.0"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"
    // GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"
    // Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"
}
